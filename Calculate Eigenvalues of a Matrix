def calculate_eigenvalues(matrix: list[list[float | int]]) -> list[float] | None:
    """
    Calculates the eigenvalues of a 2x2 matrix using the characteristic equation.

    Mathematical Explanation:
    Given a 2x2 matrix:
        A = [[a, b],
             [c, d]]

    1. Subtract λI:
        A - λI = [[a - λ, b],
                  [c, d - λ]]

    2. Compute determinant:
        det(A - λI) = (a - λ)(d - λ) - bc = 0

    3. Expand the equation:
        λ² - (a + d)λ + (ad - bc) = 0

       → λ² - trace·λ + determinant = 0
         where:
            trace = a + d
            determinant = ad - bc

    4. Solve using quadratic formula:
        λ = (trace ± √(trace² - 4·determinant)) / 2

    5. Discriminant:
        The term under the square root: (trace² - 4·determinant)
        It tells us:
            - > 0 → two real eigenvalues
            - = 0 → one real eigenvalue (repeated)
            - < 0 → complex eigenvalues

    Returns:
        A list containing two eigenvalues (real numbers), or None if the input is invalid.
    """

    rows = len(matrix)
    cols = len(matrix[0])

    if rows != cols or rows != 2:
        return None  # Only supports 2x2 square matrices

    a, b, c, d = matrix[0][0], matrix[0][1], matrix[1][0], matrix[1][1]
    trace = a + d
    det = (a * d) - (b * c)
    discriminant = (trace ** 2) - (4 * det)

    lambda1 = (trace + discriminant ** 0.5) / 2
    lambda2 = (trace - discriminant ** 0.5) / 2

    return [lambda1, lambda2]
